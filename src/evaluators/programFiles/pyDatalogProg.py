import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('node,log,pre,post,node_provLHABEPRAXYNKFIRU,log_provTVCCQWDAMSLZEEWS,log_provATVJHCTKKIVRHAJH,log_provHFCVJYQLEJYFPBKQ,pre_provIJCVJIQPDKHDUHHZ,post_provREJTALLUACGMIYRZ,clock,bcast,crash,missing_log')
pyDatalog.create_terms('Node,Neighbor,SndTime,Pload,Node2,DelivTime,SndTime,X,Pl,Node1,_')
pyDatalog.create_terms('THISISAWILDCARDRXGQZZPOILWPOWFG,THISISAWILDCARDWTKLAOWXFNPBCOTG,THISISAWILDCARDXAYAFIEJRXSPLINZ,THISISAWILDCARDGHJBKPXPTBYMHWUB,THISISAWILDCARDEXKIYDHLIRQZRAOQ,THISISAWILDCARDYJGKMBQPDDTPJINY,THISISAWILDCARDYDEJYRFKIUXIUCVF,THISISAWILDCARDETMSBDVCDISPDTAW,THISISAWILDCARDWTLVOMWBQMINYVBA,THISISAWILDCARDHRMENAXNGDLBOOGG,THISISAWILDCARDYRQUWEXKKLNOKVVQ,THISISAWILDCARDTHSUYMATPKRAXLDG,THISISAWILDCARDJJGINKVHHHMOSIUS,THISISAWILDCARDIIZUDQMBWBPCUQUT,THISISAWILDCARDQLQBNEWRNLZZHJYZ,THISISAWILDCARDAAMYBBCFXRIICUHQ,THISISAWILDCARDLRCJEGPADKMPZQEJ,THISISAWILDCARDVHYIMXWBWHVBMMUB')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a',1,2,)
pyDatalog.assert_fact('clock','a','b',1,2,)
pyDatalog.assert_fact('clock','a','c',1,2,)
pyDatalog.assert_fact('clock','a','d',1,2,)
pyDatalog.assert_fact('clock','b','a',1,2,)
pyDatalog.assert_fact('clock','b','b',1,2,)
pyDatalog.assert_fact('clock','b','c',1,2,)
pyDatalog.assert_fact('clock','b','d',1,2,)
pyDatalog.assert_fact('clock','c','a',1,2,)
pyDatalog.assert_fact('clock','c','b',1,2,)
pyDatalog.assert_fact('clock','c','c',1,2,)
pyDatalog.assert_fact('clock','c','d',1,2,)
pyDatalog.assert_fact('clock','d','a',1,2,)
pyDatalog.assert_fact('clock','d','b',1,2,)
pyDatalog.assert_fact('clock','d','c',1,2,)
pyDatalog.assert_fact('clock','d','d',1,2,)
pyDatalog.assert_fact('clock','a','a',2,3,)
pyDatalog.assert_fact('clock','a','b',2,3,)
pyDatalog.assert_fact('clock','a','c',2,3,)
pyDatalog.assert_fact('clock','a','d',2,3,)
pyDatalog.assert_fact('clock','b','a',2,3,)
pyDatalog.assert_fact('clock','b','b',2,3,)
pyDatalog.assert_fact('clock','b','c',2,3,)
pyDatalog.assert_fact('clock','b','d',2,3,)
pyDatalog.assert_fact('clock','c','a',2,3,)
pyDatalog.assert_fact('clock','c','b',2,3,)
pyDatalog.assert_fact('clock','c','c',2,3,)
pyDatalog.assert_fact('clock','c','d',2,3,)
pyDatalog.assert_fact('clock','d','a',2,3,)
pyDatalog.assert_fact('clock','d','b',2,3,)
pyDatalog.assert_fact('clock','d','c',2,3,)
pyDatalog.assert_fact('clock','d','d',2,3,)
pyDatalog.assert_fact('clock','a','a',3,4,)
pyDatalog.assert_fact('clock','a','b',3,4,)
pyDatalog.assert_fact('clock','a','c',3,4,)
pyDatalog.assert_fact('clock','a','d',3,4,)
pyDatalog.assert_fact('clock','b','a',3,4,)
pyDatalog.assert_fact('clock','b','b',3,4,)
pyDatalog.assert_fact('clock','b','c',3,4,)
pyDatalog.assert_fact('clock','b','d',3,4,)
pyDatalog.assert_fact('clock','c','a',3,4,)
pyDatalog.assert_fact('clock','c','b',3,4,)
pyDatalog.assert_fact('clock','c','c',3,4,)
pyDatalog.assert_fact('clock','c','d',3,4,)
pyDatalog.assert_fact('clock','d','a',3,4,)
pyDatalog.assert_fact('clock','d','b',3,4,)
pyDatalog.assert_fact('clock','d','c',3,4,)
pyDatalog.assert_fact('clock','d','d',3,4,)
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONZMHCFJLRBUGBHMNQ,TEMPRELATIONLBIIIFXBCLNWCNAK')
TEMPRELATIONZMHCFJLRBUGBHMNQ(Node,Neighbor,SndTime)<= (node(Node,Neighbor,SndTime)) & ( clock(Node,THISISAWILDCARDRXGQZZPOILWPOWFG,SndTime,THISISAWILDCARDWTKLAOWXFNPBCOTG))
TEMPRELATIONLBIIIFXBCLNWCNAK(Node,Neighbor,OPLOC)<=TEMPRELATIONZMHCFJLRBUGBHMNQ(Node,Neighbor,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node=TEMPRELATIONLBIIIFXBCLNWCNAK
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONIRGIFCUKYSIHQYWD,TEMPRELATIONFDBOQVDXWDUZZMUL')
TEMPRELATIONIRGIFCUKYSIHQYWD(Node,Pload,SndTime)<= (log(Node,Pload,SndTime)) & ( clock(Node,THISISAWILDCARDXAYAFIEJRXSPLINZ,SndTime,THISISAWILDCARDGHJBKPXPTBYMHWUB))
TEMPRELATIONFDBOQVDXWDUZZMUL(Node,Pload,OPLOC)<=TEMPRELATIONIRGIFCUKYSIHQYWD(Node,Pload,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log=TEMPRELATIONFDBOQVDXWDUZZMUL
log(Node2,Pload,DelivTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & ( clock(Node1,Node2,SndTime,DelivTime))
log(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & ( clock(Node,Node,SndTime,THISISAWILDCARDEXKIYDHLIRQZRAOQ))
pre(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDYJGKMBQPDDTPJINY,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDYDEJYRFKIUXIUCVF))
post(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDETMSBDVCDISPDTAW,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDWTLVOMWBQMINYVBA))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONTZEKMIVFJDXVSTJY,TEMPRELATIONLVZYIJILUELSFBCL')
TEMPRELATIONTZEKMIVFJDXVSTJY(Node,Neighbor,SndTime,SndTime)<= (node(Node,Neighbor,SndTime)) & (clock(Node,THISISAWILDCARDHRMENAXNGDLBOOGG,SndTime,THISISAWILDCARDYRQUWEXKKLNOKVVQ))
TEMPRELATIONLVZYIJILUELSFBCL(Node,Neighbor,OPLOC,SndTime)<=TEMPRELATIONTZEKMIVFJDXVSTJY(Node,Neighbor,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node_provLHABEPRAXYNKFIRU=TEMPRELATIONLVZYIJILUELSFBCL
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONSUDSFRPGIYTHQPHM,TEMPRELATIONMVWXTVUMMKBXCEEY')
TEMPRELATIONSUDSFRPGIYTHQPHM(Node,Pload,SndTime,SndTime)<= (log(Node,Pload,SndTime)) & (clock(Node,THISISAWILDCARDTHSUYMATPKRAXLDG,SndTime,THISISAWILDCARDJJGINKVHHHMOSIUS))
TEMPRELATIONMVWXTVUMMKBXCEEY(Node,Pload,OPLOC,SndTime)<=TEMPRELATIONSUDSFRPGIYTHQPHM(Node,Pload,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log_provTVCCQWDAMSLZEEWS=TEMPRELATIONMVWXTVUMMKBXCEEY
log_provATVJHCTKKIVRHAJH(Node2,Pload,DelivTime,Node1,SndTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & (clock(Node1,Node2,SndTime,DelivTime))
log_provHFCVJYQLEJYFPBKQ(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & (clock(Node,Node,SndTime,THISISAWILDCARDIIZUDQMBWBPCUQUT))
pre_provIJCVJIQPDKHDUHHZ(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDQLQBNEWRNLZZHJYZ,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDAAMYBBCFXRIICUHQ))
post_provREJTALLUACGMIYRZ(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDLRCJEGPADKMPZQEJ,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDVHYIMXWBWHVBMMUB))
print ( pre(X,Pl,SndTime) )
print ( post(X,Pl,SndTime) )
