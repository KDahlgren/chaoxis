import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('missing_log,pre,post,missing_log_provQSHQSDOLMGPAIWLF,pre_provNHWGXMVWTTTRSVKX,post_provDOSOQRSNGTTGMSRJ,node,log,node_provJEFZHDTEKPESQDLO,log_provLCHTCRRRVSKFVLUW,log_provHSMWHWGJDGNKOUYY,log_provDPAZUZAXYPNMZAQP,clock,bcast,crash')
pyDatalog.create_terms('A,Pl,SndTime,X,Node,Neighbor,SndTime,Node2,Pload,DelivTime,Node1,_')
pyDatalog.create_terms('THISISAWILDCARDUZPWOGSPQJPFKRPY,THISISAWILDCARDGVLDVPBUAWCLNWCW,THISISAWILDCARDLYEQMEFKTMKPQIZD,THISISAWILDCARDCFRSZLSKZAAULVTR,THISISAWILDCARDYBDIWXCXGGUFEMUD,THISISAWILDCARDGMBETMLPRIQAZNNU,THISISAWILDCARDZLBKVJBSERUURRPE,THISISAWILDCARDLUQRTGPHDJIWFRRP,THISISAWILDCARDHSCUWKXBPXXKUVII,THISISAWILDCARDQUYITDBZXLTTJRCQ,THISISAWILDCARDMRFWGWEVJTBKQDMK,THISISAWILDCARDPUKWEXJKGOELXXZD,THISISAWILDCARDYQCUSFYMYTYHCRVR,THISISAWILDCARDQVNKSITEOBUWTIYY,THISISAWILDCARDFSPIEAJXLNFQGFCB,THISISAWILDCARDAKCFETBBQTVSDQBW,THISISAWILDCARDBUOIQJLWTYHQWAHP,THISISAWILDCARDNEITVASHQMUXGBNR,THISISAWILDCARDDXNDOYNRJZOVKRIS,THISISAWILDCARDOOSJZZXHPUZWWSBY')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a',1,2,)
pyDatalog.assert_fact('clock','a','b',1,2,)
pyDatalog.assert_fact('clock','a','c',1,2,)
pyDatalog.assert_fact('clock','a','d',1,2,)
pyDatalog.assert_fact('clock','b','a',1,2,)
pyDatalog.assert_fact('clock','b','b',1,2,)
pyDatalog.assert_fact('clock','b','c',1,2,)
pyDatalog.assert_fact('clock','b','d',1,2,)
pyDatalog.assert_fact('clock','c','a',1,2,)
pyDatalog.assert_fact('clock','c','b',1,2,)
pyDatalog.assert_fact('clock','c','c',1,2,)
pyDatalog.assert_fact('clock','c','d',1,2,)
pyDatalog.assert_fact('clock','d','a',1,2,)
pyDatalog.assert_fact('clock','d','b',1,2,)
pyDatalog.assert_fact('clock','d','c',1,2,)
pyDatalog.assert_fact('clock','d','d',1,2,)
pyDatalog.assert_fact('clock','a','a',2,3,)
pyDatalog.assert_fact('clock','a','b',2,3,)
pyDatalog.assert_fact('clock','a','c',2,3,)
pyDatalog.assert_fact('clock','a','d',2,3,)
pyDatalog.assert_fact('clock','b','a',2,3,)
pyDatalog.assert_fact('clock','b','b',2,3,)
pyDatalog.assert_fact('clock','b','c',2,3,)
pyDatalog.assert_fact('clock','b','d',2,3,)
pyDatalog.assert_fact('clock','c','a',2,3,)
pyDatalog.assert_fact('clock','c','b',2,3,)
pyDatalog.assert_fact('clock','c','c',2,3,)
pyDatalog.assert_fact('clock','c','d',2,3,)
pyDatalog.assert_fact('clock','d','a',2,3,)
pyDatalog.assert_fact('clock','d','b',2,3,)
pyDatalog.assert_fact('clock','d','c',2,3,)
pyDatalog.assert_fact('clock','d','d',2,3,)
pyDatalog.assert_fact('clock','a','a',3,4,)
pyDatalog.assert_fact('clock','a','b',3,4,)
pyDatalog.assert_fact('clock','a','c',3,4,)
pyDatalog.assert_fact('clock','a','d',3,4,)
pyDatalog.assert_fact('clock','b','a',3,4,)
pyDatalog.assert_fact('clock','b','b',3,4,)
pyDatalog.assert_fact('clock','b','c',3,4,)
pyDatalog.assert_fact('clock','b','d',3,4,)
pyDatalog.assert_fact('clock','c','a',3,4,)
pyDatalog.assert_fact('clock','c','b',3,4,)
pyDatalog.assert_fact('clock','c','c',3,4,)
pyDatalog.assert_fact('clock','c','d',3,4,)
pyDatalog.assert_fact('clock','d','a',3,4,)
pyDatalog.assert_fact('clock','d','b',3,4,)
pyDatalog.assert_fact('clock','d','c',3,4,)
pyDatalog.assert_fact('clock','d','d',3,4,)
missing_log(A,Pl,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDUZPWOGSPQJPFKRPY))
pre(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDGVLDVPBUAWCLNWCW,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDLYEQMEFKTMKPQIZD))
post(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDCFRSZLSKZAAULVTR,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDYBDIWXCXGGUFEMUD))
missing_log_provQSHQSDOLMGPAIWLF(A,Pl,X,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDGMBETMLPRIQAZNNU))
pre_provNHWGXMVWTTTRSVKX(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDZLBKVJBSERUURRPE,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDLUQRTGPHDJIWFRRP))
post_provDOSOQRSNGTTGMSRJ(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDHSCUWKXBPXXKUVII,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDQUYITDBZXLTTJRCQ))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONFHQRHHHDVRTNCQSG,TEMPRELATIONTAAXGRUROZAHUBHW')
TEMPRELATIONFHQRHHHDVRTNCQSG(Node,Neighbor,SndTime)<= (node(Node,Neighbor,SndTime)) & ( clock(Node,THISISAWILDCARDMRFWGWEVJTBKQDMK,SndTime,THISISAWILDCARDPUKWEXJKGOELXXZD))
TEMPRELATIONTAAXGRUROZAHUBHW(Node,Neighbor,OPLOC)<=TEMPRELATIONFHQRHHHDVRTNCQSG(Node,Neighbor,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node=TEMPRELATIONTAAXGRUROZAHUBHW
log(Node2,Pload,DelivTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & ( clock(Node1,Node2,SndTime,DelivTime))
log(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & ( clock(Node,Node,SndTime,THISISAWILDCARDYQCUSFYMYTYHCRVR))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONOIPNKSKIOSGDLMRT,TEMPRELATIONJZODYKCEAKLBFWYG')
TEMPRELATIONOIPNKSKIOSGDLMRT(Node,Pload,SndTime)<= (log(Node,Pload,SndTime)) & ( clock(Node,THISISAWILDCARDQVNKSITEOBUWTIYY,SndTime,THISISAWILDCARDFSPIEAJXLNFQGFCB))
TEMPRELATIONJZODYKCEAKLBFWYG(Node,Pload,OPLOC)<=TEMPRELATIONOIPNKSKIOSGDLMRT(Node,Pload,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log=TEMPRELATIONJZODYKCEAKLBFWYG
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONYPFYNKUSTCVMOYWY,TEMPRELATIONDYVNGMBSNHMAPQKW')
TEMPRELATIONYPFYNKUSTCVMOYWY(Node,Neighbor,SndTime,SndTime)<= (node(Node,Neighbor,SndTime)) & (clock(Node,THISISAWILDCARDAKCFETBBQTVSDQBW,SndTime,THISISAWILDCARDBUOIQJLWTYHQWAHP))
TEMPRELATIONDYVNGMBSNHMAPQKW(Node,Neighbor,OPLOC,SndTime)<=TEMPRELATIONYPFYNKUSTCVMOYWY(Node,Neighbor,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node_provJEFZHDTEKPESQDLO=TEMPRELATIONDYVNGMBSNHMAPQKW
log_provLCHTCRRRVSKFVLUW(Node2,Pload,DelivTime,Node1,SndTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & (clock(Node1,Node2,SndTime,DelivTime))
log_provHSMWHWGJDGNKOUYY(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & (clock(Node,Node,SndTime,THISISAWILDCARDNEITVASHQMUXGBNR))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONUAWKFTSZNQNMDTMZ,TEMPRELATIONNQCPGRYPWGQTDWTQ')
TEMPRELATIONUAWKFTSZNQNMDTMZ(Node,Pload,SndTime,SndTime)<= (log(Node,Pload,SndTime)) & (clock(Node,THISISAWILDCARDDXNDOYNRJZOVKRIS,SndTime,THISISAWILDCARDOOSJZZXHPUZWWSBY))
TEMPRELATIONNQCPGRYPWGQTDWTQ(Node,Pload,OPLOC,SndTime)<=TEMPRELATIONUAWKFTSZNQNMDTMZ(Node,Pload,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log_provDPAZUZAXYPNMZAQP=TEMPRELATIONNQCPGRYPWGQTDWTQ
print ( pre(X,Pl,SndTime) )
print ( post(X,Pl,SndTime) )
