import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('missing_log,pre,post,missing_log_provYMVBFDGHMPHWMPPH,pre_provCHFPRGBKITLOTVGQ,post_provKRUVOHYYPGICHHHM,node,log,node_provQAKARIPLYRXIDZWS,log_provFOENBZYGDIKQIYIZ,log_provMXOROCTIOGIGBZUK,log_provITTTSVIJPUENNVTE,clock,bcast,crash')
pyDatalog.create_terms('A,Pl,SndTime,X,Node,Neighbor,SndTime,Node2,Pload,DelivTime,Node1,_')
pyDatalog.create_terms('THISISAWILDCARDLDGDXZIXJIHZKHOJ,THISISAWILDCARDPOQPRQYBTECESAHH,THISISAWILDCARDOSCMHDWPHRDUBSWS,THISISAWILDCARDFYKZMOMDGTMWLNCQ,THISISAWILDCARDNMEBZXFDMRURTEQP,THISISAWILDCARDOCBETSHMAASKUURE,THISISAWILDCARDEONJMYVHLQMHMFIQ,THISISAWILDCARDIYGGXVTDWHHKFMVB,THISISAWILDCARDHTTZJZWKYNHKQNMG,THISISAWILDCARDMOPUBBRKWDNDFVBZ,THISISAWILDCARDDLFTQAUYGTJKKLLK,THISISAWILDCARDKHVDSAJPDXIEWVVT,THISISAWILDCARDIFRIESBXKQGEEDSQ,THISISAWILDCARDIIFXXGPSRIJMEMWN,THISISAWILDCARDVISGUIYVBRFLSHIH,THISISAWILDCARDWXSPTDHHBRPWLTZF,THISISAWILDCARDSQBZOCLZIDTFBPTT,THISISAWILDCARDYUEQQIPJGLBIEFSQ,THISISAWILDCARDXKAYRPOWKBNRKUTC,THISISAWILDCARDPWAHKRHVRSLJWVLE')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a',1,2,)
pyDatalog.assert_fact('clock','a','b',1,2,)
pyDatalog.assert_fact('clock','a','c',1,2,)
pyDatalog.assert_fact('clock','b','a',1,2,)
pyDatalog.assert_fact('clock','b','b',1,2,)
pyDatalog.assert_fact('clock','b','c',1,2,)
pyDatalog.assert_fact('clock','c','a',1,2,)
pyDatalog.assert_fact('clock','c','b',1,2,)
pyDatalog.assert_fact('clock','c','c',1,2,)
pyDatalog.assert_fact('clock','a','a',2,3,)
pyDatalog.assert_fact('clock','a','b',2,3,)
pyDatalog.assert_fact('clock','a','c',2,3,)
pyDatalog.assert_fact('clock','b','a',2,3,)
pyDatalog.assert_fact('clock','b','b',2,3,)
pyDatalog.assert_fact('clock','b','c',2,3,)
pyDatalog.assert_fact('clock','c','a',2,3,)
pyDatalog.assert_fact('clock','c','b',2,3,)
pyDatalog.assert_fact('clock','c','c',2,3,)
pyDatalog.assert_fact('clock','a','a',3,4,)
pyDatalog.assert_fact('clock','a','b',3,4,)
pyDatalog.assert_fact('clock','a','c',3,4,)
pyDatalog.assert_fact('clock','b','a',3,4,)
pyDatalog.assert_fact('clock','b','b',3,4,)
pyDatalog.assert_fact('clock','b','c',3,4,)
pyDatalog.assert_fact('clock','c','a',3,4,)
pyDatalog.assert_fact('clock','c','b',3,4,)
pyDatalog.assert_fact('clock','c','c',3,4,)
missing_log(A,Pl,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDLDGDXZIXJIHZKHOJ))
pre(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDPOQPRQYBTECESAHH,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDOSCMHDWPHRDUBSWS))
post(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDFYKZMOMDGTMWLNCQ,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDNMEBZXFDMRURTEQP))
missing_log_provYMVBFDGHMPHWMPPH(A,Pl,X,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDOCBETSHMAASKUURE))
pre_provCHFPRGBKITLOTVGQ(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDEONJMYVHLQMHMFIQ,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDIYGGXVTDWHHKFMVB))
post_provKRUVOHYYPGICHHHM(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDHTTZJZWKYNHKQNMG,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDMOPUBBRKWDNDFVBZ))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONUKWOUKVMVBERDQIE,TEMPRELATIONKFGNOTJHEUKXPJIS')
TEMPRELATIONUKWOUKVMVBERDQIE(Node,Neighbor,SndTime)<= (node(Node,Neighbor,SndTime)) & ( clock(Node,THISISAWILDCARDDLFTQAUYGTJKKLLK,SndTime,THISISAWILDCARDKHVDSAJPDXIEWVVT))
TEMPRELATIONKFGNOTJHEUKXPJIS(Node,Neighbor,OPLOC)<=TEMPRELATIONUKWOUKVMVBERDQIE(Node,Neighbor,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node=TEMPRELATIONKFGNOTJHEUKXPJIS
log(Node2,Pload,DelivTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & ( clock(Node1,Node2,SndTime,DelivTime))
log(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & ( clock(Node,Node,SndTime,THISISAWILDCARDIFRIESBXKQGEEDSQ))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONVCQQAHVDAILWNKJX,TEMPRELATIONLEPDXRKRFVJYNCQO')
TEMPRELATIONVCQQAHVDAILWNKJX(Node,Pload,SndTime)<= (log(Node,Pload,SndTime)) & ( clock(Node,THISISAWILDCARDIIFXXGPSRIJMEMWN,SndTime,THISISAWILDCARDVISGUIYVBRFLSHIH))
TEMPRELATIONLEPDXRKRFVJYNCQO(Node,Pload,OPLOC)<=TEMPRELATIONVCQQAHVDAILWNKJX(Node,Pload,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log=TEMPRELATIONLEPDXRKRFVJYNCQO
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONXWYAXOOARZIINDGZ,TEMPRELATIONBYKQKUMNWLQPZBKV')
TEMPRELATIONXWYAXOOARZIINDGZ(Node,Neighbor,SndTime,SndTime)<= (node(Node,Neighbor,SndTime)) & (clock(Node,THISISAWILDCARDWXSPTDHHBRPWLTZF,SndTime,THISISAWILDCARDSQBZOCLZIDTFBPTT))
TEMPRELATIONBYKQKUMNWLQPZBKV(Node,Neighbor,OPLOC,SndTime)<=TEMPRELATIONXWYAXOOARZIINDGZ(Node,Neighbor,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node_provQAKARIPLYRXIDZWS=TEMPRELATIONBYKQKUMNWLQPZBKV
log_provFOENBZYGDIKQIYIZ(Node2,Pload,DelivTime,Node1,SndTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & (clock(Node1,Node2,SndTime,DelivTime))
log_provMXOROCTIOGIGBZUK(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & (clock(Node,Node,SndTime,THISISAWILDCARDYUEQQIPJGLBIEFSQ))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONENNQZNOITMVCIAGT,TEMPRELATIONHBNEPURSYNHPVYLB')
TEMPRELATIONENNQZNOITMVCIAGT(Node,Pload,SndTime,SndTime)<= (log(Node,Pload,SndTime)) & (clock(Node,THISISAWILDCARDXKAYRPOWKBNRKUTC,SndTime,THISISAWILDCARDPWAHKRHVRSLJWVLE))
TEMPRELATIONHBNEPURSYNHPVYLB(Node,Pload,OPLOC,SndTime)<=TEMPRELATIONENNQZNOITMVCIAGT(Node,Pload,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log_provITTTSVIJPUENNVTE=TEMPRELATIONHBNEPURSYNHPVYLB
print ( pre(X,Pl,SndTime) )
print ( post(X,Pl,SndTime) )
