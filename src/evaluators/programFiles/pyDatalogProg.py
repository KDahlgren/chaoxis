import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('missing_log,pre,post,missing_log_provHHTYRASTZFMGKXZH,pre_provJTLAVFAOECGZBDPL,post_provNBICROJTESSPNWBM,node,log,node_provZQIQISVTSNAELUFI,log_provSTFBQDTGYWQYGODP,log_provLLPGNJTXLAQQDSDT,log_provKJJZUNZYBKVLDNYT,clock,bcast,crash')
pyDatalog.create_terms('A,Pl,SndTime,X,Node,Neighbor,SndTime,Node2,Pload,DelivTime,Node1,_')
pyDatalog.create_terms('THISISAWILDCARDRAFFDGFDQHXJAVXV,THISISAWILDCARDPCWKLRKAKOBMOPRL,THISISAWILDCARDVSKVIFWOGXSISNHF,THISISAWILDCARDRMXHADMMVZVTJOHL,THISISAWILDCARDHXEKFHICYCTJYSTE,THISISAWILDCARDOKKHMMIHXWOARUCR,THISISAWILDCARDSTOEFIXJREATVXDO,THISISAWILDCARDVWCLQRBFJPNAOOCD,THISISAWILDCARDJIUNJTDSYXPWJGSC,THISISAWILDCARDAPYWVJLQMNXTPFCB,THISISAWILDCARDOKSBYEBFKSSLLDFQ,THISISAWILDCARDZSOFVJSCERBLQTKC,THISISAWILDCARDHCJMBNJBMPQIHOJZ,THISISAWILDCARDKUUKOLERNEPJUUNZ,THISISAWILDCARDQZSOQHSFXVNINRKT,THISISAWILDCARDXTZWDOQHNHOPMTHR,THISISAWILDCARDHPTDQUDEPNJOXIHR,THISISAWILDCARDFBIIGFWXBIPUTZQT,THISISAWILDCARDHOUAWWFJHIMOMNOI,THISISAWILDCARDLTXSKDSCAMPNXBVI')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a',1,2,)
pyDatalog.assert_fact('clock','a','b',1,2,)
pyDatalog.assert_fact('clock','a','c',1,2,)
pyDatalog.assert_fact('clock','a','d',1,2,)
pyDatalog.assert_fact('clock','b','a',1,2,)
pyDatalog.assert_fact('clock','b','b',1,2,)
pyDatalog.assert_fact('clock','b','c',1,2,)
pyDatalog.assert_fact('clock','b','d',1,2,)
pyDatalog.assert_fact('clock','c','a',1,2,)
pyDatalog.assert_fact('clock','c','b',1,2,)
pyDatalog.assert_fact('clock','c','c',1,2,)
pyDatalog.assert_fact('clock','c','d',1,2,)
pyDatalog.assert_fact('clock','d','a',1,2,)
pyDatalog.assert_fact('clock','d','b',1,2,)
pyDatalog.assert_fact('clock','d','c',1,2,)
pyDatalog.assert_fact('clock','d','d',1,2,)
pyDatalog.assert_fact('clock','a','a',2,3,)
pyDatalog.assert_fact('clock','a','b',2,3,)
pyDatalog.assert_fact('clock','a','c',2,3,)
pyDatalog.assert_fact('clock','a','d',2,3,)
pyDatalog.assert_fact('clock','b','a',2,3,)
pyDatalog.assert_fact('clock','b','b',2,3,)
pyDatalog.assert_fact('clock','b','c',2,3,)
pyDatalog.assert_fact('clock','b','d',2,3,)
pyDatalog.assert_fact('clock','c','a',2,3,)
pyDatalog.assert_fact('clock','c','b',2,3,)
pyDatalog.assert_fact('clock','c','c',2,3,)
pyDatalog.assert_fact('clock','c','d',2,3,)
pyDatalog.assert_fact('clock','d','a',2,3,)
pyDatalog.assert_fact('clock','d','b',2,3,)
pyDatalog.assert_fact('clock','d','c',2,3,)
pyDatalog.assert_fact('clock','d','d',2,3,)
pyDatalog.assert_fact('clock','a','a',3,4,)
pyDatalog.assert_fact('clock','a','b',3,4,)
pyDatalog.assert_fact('clock','a','c',3,4,)
pyDatalog.assert_fact('clock','a','d',3,4,)
pyDatalog.assert_fact('clock','b','a',3,4,)
pyDatalog.assert_fact('clock','b','b',3,4,)
pyDatalog.assert_fact('clock','b','c',3,4,)
pyDatalog.assert_fact('clock','b','d',3,4,)
pyDatalog.assert_fact('clock','c','a',3,4,)
pyDatalog.assert_fact('clock','c','b',3,4,)
pyDatalog.assert_fact('clock','c','c',3,4,)
pyDatalog.assert_fact('clock','c','d',3,4,)
pyDatalog.assert_fact('clock','d','a',3,4,)
pyDatalog.assert_fact('clock','d','b',3,4,)
pyDatalog.assert_fact('clock','d','c',3,4,)
pyDatalog.assert_fact('clock','d','d',3,4,)
missing_log(A,Pl,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDRAFFDGFDQHXJAVXV))
pre(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDPCWKLRKAKOBMOPRL,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDVSKVIFWOGXSISNHF))
post(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDRMXHADMMVZVTJOHL,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDHXEKFHICYCTJYSTE))
missing_log_provHHTYRASTZFMGKXZH(A,Pl,X,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDOKKHMMIHXWOARUCR))
pre_provJTLAVFAOECGZBDPL(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDSTOEFIXJREATVXDO,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDVWCLQRBFJPNAOOCD))
post_provNBICROJTESSPNWBM(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDJIUNJTDSYXPWJGSC,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDAPYWVJLQMNXTPFCB))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONXXOVUDEZOURPWHEM,TEMPRELATIONVBQPIZUHVVITQIYA')
TEMPRELATIONXXOVUDEZOURPWHEM(Node,Neighbor,SndTime)<= (node(Node,Neighbor,SndTime)) & ( clock(Node,THISISAWILDCARDOKSBYEBFKSSLLDFQ,SndTime,THISISAWILDCARDZSOFVJSCERBLQTKC))
TEMPRELATIONVBQPIZUHVVITQIYA(Node,Neighbor,OPLOC)<=TEMPRELATIONXXOVUDEZOURPWHEM(Node,Neighbor,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node=TEMPRELATIONVBQPIZUHVVITQIYA
log(Node2,Pload,DelivTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & ( clock(Node1,Node2,SndTime,DelivTime))
log(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & ( clock(Node,Node,SndTime,THISISAWILDCARDHCJMBNJBMPQIHOJZ))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONOKVUYHSIEYFCJZKF,TEMPRELATIONCPSXLSYTTXKFUEHD')
TEMPRELATIONOKVUYHSIEYFCJZKF(Node,Pload,SndTime)<= (log(Node,Pload,SndTime)) & ( clock(Node,THISISAWILDCARDKUUKOLERNEPJUUNZ,SndTime,THISISAWILDCARDQZSOQHSFXVNINRKT))
TEMPRELATIONCPSXLSYTTXKFUEHD(Node,Pload,OPLOC)<=TEMPRELATIONOKVUYHSIEYFCJZKF(Node,Pload,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log=TEMPRELATIONCPSXLSYTTXKFUEHD
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONFLPFTPBZJNHWEYNY,TEMPRELATIONIYDXVKNQYLCGNXUD')
TEMPRELATIONFLPFTPBZJNHWEYNY(Node,Neighbor,SndTime,SndTime)<= (node(Node,Neighbor,SndTime)) & (clock(Node,THISISAWILDCARDXTZWDOQHNHOPMTHR,SndTime,THISISAWILDCARDHPTDQUDEPNJOXIHR))
TEMPRELATIONIYDXVKNQYLCGNXUD(Node,Neighbor,OPLOC,SndTime)<=TEMPRELATIONFLPFTPBZJNHWEYNY(Node,Neighbor,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node_provZQIQISVTSNAELUFI=TEMPRELATIONIYDXVKNQYLCGNXUD
log_provSTFBQDTGYWQYGODP(Node2,Pload,DelivTime,Node1,SndTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & (clock(Node1,Node2,SndTime,DelivTime))
log_provLLPGNJTXLAQQDSDT(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & (clock(Node,Node,SndTime,THISISAWILDCARDFBIIGFWXBIPUTZQT))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONLZXGBIPBSRJORMIJ,TEMPRELATIONXWBJWRSNYXWXZJMV')
TEMPRELATIONLZXGBIPBSRJORMIJ(Node,Pload,SndTime,SndTime)<= (log(Node,Pload,SndTime)) & (clock(Node,THISISAWILDCARDHOUAWWFJHIMOMNOI,SndTime,THISISAWILDCARDLTXSKDSCAMPNXBVI))
TEMPRELATIONXWBJWRSNYXWXZJMV(Node,Pload,OPLOC,SndTime)<=TEMPRELATIONLZXGBIPBSRJORMIJ(Node,Pload,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log_provKJJZUNZYBKVLDNYT=TEMPRELATIONXWBJWRSNYXWXZJMV
print ( pre(X,Pl,SndTime) )
print ( post(X,Pl,SndTime) )
