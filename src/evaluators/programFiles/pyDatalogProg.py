import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('missing_log,pre,post,missing_log_provT3TSP2VPBLWRETOW,pre_prov5QOL69CG1XKIL704,post_provKT5G06HFSZXCP8BR,node,log,node_provD5V94T2816NASXOL,log_provAZVWQEPF74HJ8K8A,log_prov1VITSLAGNF3FW3S5,log_provE5UZF3O9SACKFTKQ,bcast,crash,clock')
pyDatalog.create_terms('A,Pl,Time,X,Node,Neighbor,Time,Pload,Node2,SndTime,Node1,SndTime,THISISAWILDCARD')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a','1','2')
pyDatalog.assert_fact('clock','a','b','1','2')
pyDatalog.assert_fact('clock','a','c','1','2')
pyDatalog.assert_fact('clock','a','d','1','2')
pyDatalog.assert_fact('clock','b','a','1','2')
pyDatalog.assert_fact('clock','b','b','1','2')
pyDatalog.assert_fact('clock','b','c','1','2')
pyDatalog.assert_fact('clock','b','d','1','2')
pyDatalog.assert_fact('clock','c','a','1','2')
pyDatalog.assert_fact('clock','c','b','1','2')
pyDatalog.assert_fact('clock','c','c','1','2')
pyDatalog.assert_fact('clock','c','d','1','2')
pyDatalog.assert_fact('clock','d','a','1','2')
pyDatalog.assert_fact('clock','d','b','1','2')
pyDatalog.assert_fact('clock','d','c','1','2')
pyDatalog.assert_fact('clock','d','d','1','2')
pyDatalog.assert_fact('clock','a','a','2','3')
pyDatalog.assert_fact('clock','a','b','2','3')
pyDatalog.assert_fact('clock','a','c','2','3')
pyDatalog.assert_fact('clock','a','d','2','3')
pyDatalog.assert_fact('clock','b','a','2','3')
pyDatalog.assert_fact('clock','b','b','2','3')
pyDatalog.assert_fact('clock','b','c','2','3')
pyDatalog.assert_fact('clock','b','d','2','3')
pyDatalog.assert_fact('clock','c','a','2','3')
pyDatalog.assert_fact('clock','c','b','2','3')
pyDatalog.assert_fact('clock','c','c','2','3')
pyDatalog.assert_fact('clock','c','d','2','3')
pyDatalog.assert_fact('clock','d','a','2','3')
pyDatalog.assert_fact('clock','d','b','2','3')
pyDatalog.assert_fact('clock','d','c','2','3')
pyDatalog.assert_fact('clock','d','d','2','3')
pyDatalog.assert_fact('clock','a','a','3','4')
pyDatalog.assert_fact('clock','a','b','3','4')
pyDatalog.assert_fact('clock','a','c','3','4')
pyDatalog.assert_fact('clock','a','d','3','4')
pyDatalog.assert_fact('clock','b','a','3','4')
pyDatalog.assert_fact('clock','b','b','3','4')
pyDatalog.assert_fact('clock','b','c','3','4')
pyDatalog.assert_fact('clock','b','d','3','4')
pyDatalog.assert_fact('clock','c','a','3','4')
pyDatalog.assert_fact('clock','c','b','3','4')
pyDatalog.assert_fact('clock','c','c','3','4')
pyDatalog.assert_fact('clock','c','d','3','4')
pyDatalog.assert_fact('clock','d','a','3','4')
pyDatalog.assert_fact('clock','d','b','3','4')
pyDatalog.assert_fact('clock','d','c','3','4')
pyDatalog.assert_fact('clock','d','d','3','4')
(missing_log(A,Pl,Time,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (node(X,A,Time,Time,Time)) & (~(log(A,Pl,Time,Time,Time)))
(pre(X,Pl,Time,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (~(bcast(X,Pl,1,1,1)) )& (~(crash(X,X,THISISAWILDCARD,Time,Time,Time)))
(post(X,Pl,Time,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (~(missing_log(THISISAWILDCARD,Pl,Time,Time,Time)))
(missing_log_provT3TSP2VPBLWRETOW(X,Pl,Time,A,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (node(X,A,Time,Time,Time)) & (~(log(A,Pl,Time,Time,Time)))
(pre_prov5QOL69CG1XKIL704(X,Pl,Time,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (~(bcast(X,Pl,1,Time,Time)) )& (~(crash(X,X,THISISAWILDCARD,Time,Time,Time)))
(post_provKT5G06HFSZXCP8BR(X,Pl,Time,Time,Time)) <= (log(X,Pl,Time,Time,Time)) & (~(missing_log(THISISAWILDCARD,Pl,Time,Time,Time)))
(node(Node,Neighbor,Time+1,Time)) <= (node(Node,Neighbor,Time,Time))
(log(Node,Pload,Time+1,Time)) <= (log(Node,Pload,Time,Time))
(log(Node2,Pload,SndTime+1,Time)) <= (bcast(Node1,Pload,SndTime,Time)) & (node(Node1,Node2,SndTime,Time)) & ( clock(Node1,Node2,SndTime,Time))
(log(Node,Pload,Time,Time)) <= (bcast(Node,Pload,Time,Time))
(node_provD5V94T2816NASXOL(Node,Neighbor,Time,Time)) <= (node(Node,Neighbor,Time,Time))
(log_provAZVWQEPF74HJ8K8A(Node,Pload,Time,Time)) <= (log(Node,Pload,Time,Time))
(log_prov1VITSLAGNF3FW3S5(Node1,Pload,SndTime,Node2,Time)) <= (bcast(Node1,Pload,SndTime,Time)) & (node(Node1,Node2,SndTime,Time)) & (clock(Node1,Node2,SndTime,Time))
(log_provE5UZF3O9SACKFTKQ(Node,Pload,Time,Time)) <= (bcast(Node,Pload,Time,Time))
print ( pre(X,Pl,Time).data[0] )
print ( post(X,Pl,Time).data[0] )
