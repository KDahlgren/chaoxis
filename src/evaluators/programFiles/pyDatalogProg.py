import logging
from pyDatalog import pyDatalog, pyEngine
pyEngine.Logging = True
logging.basicConfig(level=logging.INFO)
pyDatalog.create_terms('missing_log,pre,post,missing_log_provMRBNWWPODKGVUNWO,pre_provMDJMCEMYFCPHLKAV,post_provIQZVLHHDLRTJZRAJ,node,log,node_provGPMVYGWKBLWPUJPP,log_provGYLJNLMMOOQCAQFM,log_provIBTNCGLSOEENDFEF,log_provLEQLBWCDHSKWIYVA,clock,bcast,crash')
pyDatalog.create_terms('A,Pl,SndTime,X,Node,Neighbor,SndTime,Node2,Pload,DelivTime,Node1,_')
pyDatalog.create_terms('THISISAWILDCARDBCEJVLHCYYSKYVMB,THISISAWILDCARDZACEZLTLBHZYBKJB,THISISAWILDCARDMSZQGSLHXQQKOIXV,THISISAWILDCARDMBKKVIMNSEHJAXKW,THISISAWILDCARDKHAXMEMBEOWGPSSL,THISISAWILDCARDRARMCJHKKFTFGBRA,THISISAWILDCARDYFKAJFUJPVSAXSYQ,THISISAWILDCARDNOTXWGWCAFBILXVB,THISISAWILDCARDSOIPZYMUVRBEIZBC,THISISAWILDCARDEZXGDZNVOKRAIVBN,THISISAWILDCARDQYCRHRWCHOAPUQGJ,THISISAWILDCARDGGYAENMZJRICBKWQ,THISISAWILDCARDMHOQXOSWMGCPJRFI,THISISAWILDCARDDZIFRKJIDSBTUGZG,THISISAWILDCARDLSAEUEIPUYQWNXQR,THISISAWILDCARDOACYMCTTPPMRGYMH,THISISAWILDCARDAQQLYAUTRIRZGDNP,THISISAWILDCARDHGFRZJBXOLSSXSYO,THISISAWILDCARDAJRFVWTAABOQFSEZ,THISISAWILDCARDJILZTHCQPETKQORO')
pyDatalog.assert_fact('node',"a","b",1)
pyDatalog.assert_fact('node',"a","c",1)
pyDatalog.assert_fact('node',"b","a",1)
pyDatalog.assert_fact('node',"b","c",1)
pyDatalog.assert_fact('node',"c","a",1)
pyDatalog.assert_fact('node',"c","b",1)
pyDatalog.assert_fact('bcast',"a","hello",1)
pyDatalog.assert_fact('clock','a','a',1,2,)
pyDatalog.assert_fact('clock','a','b',1,2,)
pyDatalog.assert_fact('clock','a','c',1,2,)
pyDatalog.assert_fact('clock','b','a',1,2,)
pyDatalog.assert_fact('clock','b','b',1,2,)
pyDatalog.assert_fact('clock','b','c',1,2,)
pyDatalog.assert_fact('clock','c','a',1,2,)
pyDatalog.assert_fact('clock','c','b',1,2,)
pyDatalog.assert_fact('clock','c','c',1,2,)
pyDatalog.assert_fact('clock','a','a',2,3,)
pyDatalog.assert_fact('clock','a','b',2,3,)
pyDatalog.assert_fact('clock','a','c',2,3,)
pyDatalog.assert_fact('clock','b','a',2,3,)
pyDatalog.assert_fact('clock','b','b',2,3,)
pyDatalog.assert_fact('clock','b','c',2,3,)
pyDatalog.assert_fact('clock','c','a',2,3,)
pyDatalog.assert_fact('clock','c','b',2,3,)
pyDatalog.assert_fact('clock','c','c',2,3,)
pyDatalog.assert_fact('clock','a','a',3,4,)
pyDatalog.assert_fact('clock','a','b',3,4,)
pyDatalog.assert_fact('clock','a','c',3,4,)
pyDatalog.assert_fact('clock','b','a',3,4,)
pyDatalog.assert_fact('clock','b','b',3,4,)
pyDatalog.assert_fact('clock','b','c',3,4,)
pyDatalog.assert_fact('clock','c','a',3,4,)
pyDatalog.assert_fact('clock','c','b',3,4,)
pyDatalog.assert_fact('clock','c','c',3,4,)
missing_log(A,Pl,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDBCEJVLHCYYSKYVMB))
pre(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDZACEZLTLBHZYBKJB,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDMSZQGSLHXQQKOIXV))
post(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDMBKKVIMNSEHJAXKW,Pl,SndTime)) )& ( clock(X,X,SndTime,THISISAWILDCARDKHAXMEMBEOWGPSSL))
missing_log_provMRBNWWPODKGVUNWO(A,Pl,X,SndTime) <= (log(X,Pl,SndTime)) & (node(X,A,SndTime)) & (~(log(A,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDRARMCJHKKFTFGBRA))
pre_provMDJMCEMYFCPHLKAV(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(bcast(X,Pl,1)) )& (~(crash(X,X,THISISAWILDCARDYFKAJFUJPVSAXSYQ,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDNOTXWGWCAFBILXVB))
post_provIQZVLHHDLRTJZRAJ(X,Pl,SndTime) <= (log(X,Pl,SndTime)) & (~(missing_log(THISISAWILDCARDSOIPZYMUVRBEIZBC,Pl,SndTime)) )& (clock(X,X,SndTime,THISISAWILDCARDEZXGDZNVOKRAIVBN))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONTEUVARPDDKJIFKIZ,TEMPRELATIONEMMVDXEIEQGNTBRW')
TEMPRELATIONTEUVARPDDKJIFKIZ(Node,Neighbor,SndTime)<= (node(Node,Neighbor,SndTime)) & ( clock(Node,THISISAWILDCARDQYCRHRWCHOAPUQGJ,SndTime,THISISAWILDCARDGGYAENMZJRICBKWQ))
TEMPRELATIONEMMVDXEIEQGNTBRW(Node,Neighbor,OPLOC)<=TEMPRELATIONTEUVARPDDKJIFKIZ(Node,Neighbor,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node=TEMPRELATIONEMMVDXEIEQGNTBRW
log(Node2,Pload,DelivTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & ( clock(Node1,Node2,SndTime,DelivTime))
log(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & ( clock(Node,Node,SndTime,THISISAWILDCARDMHOQXOSWMGCPJRFI))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONSRRGQKFMFCCBOZYS,TEMPRELATIONPPTDUAFEYPHEBAZE')
TEMPRELATIONSRRGQKFMFCCBOZYS(Node,Pload,SndTime)<= (log(Node,Pload,SndTime)) & ( clock(Node,THISISAWILDCARDDZIFRKJIDSBTUGZG,SndTime,THISISAWILDCARDLSAEUEIPUYQWNXQR))
TEMPRELATIONPPTDUAFEYPHEBAZE(Node,Pload,OPLOC)<=TEMPRELATIONSRRGQKFMFCCBOZYS(Node,Pload,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log=TEMPRELATIONPPTDUAFEYPHEBAZE
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONAEFETKVHQNJTJVRW,TEMPRELATIONNNMGHQZHQPAHFJZU')
TEMPRELATIONAEFETKVHQNJTJVRW(Node,Neighbor,SndTime,SndTime)<= (node(Node,Neighbor,SndTime)) & (clock(Node,THISISAWILDCARDOACYMCTTPPMRGYMH,SndTime,THISISAWILDCARDAQQLYAUTRIRZGDNP))
TEMPRELATIONNNMGHQZHQPAHFJZU(Node,Neighbor,OPLOC,SndTime)<=TEMPRELATIONAEFETKVHQNJTJVRW(Node,Neighbor,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
node_provGPMVYGWKBLWPUJPP=TEMPRELATIONNNMGHQZHQPAHFJZU
log_provGYLJNLMMOOQCAQFM(Node2,Pload,DelivTime,Node1,SndTime) <= (bcast(Node1,Pload,SndTime)) & (node(Node1,Node2,SndTime)) & (clock(Node1,Node2,SndTime,DelivTime))
log_provIBTNCGLSOEENDFEF(Node,Pload,SndTime) <= (bcast(Node,Pload,SndTime)) & (clock(Node,Node,SndTime,THISISAWILDCARDHGFRZJBXOLSSXSYO))
pyDatalog.create_terms('OPLOC')
pyDatalog.create_terms('TEMPRELATIONNICONCHYGCBMWKPH,TEMPRELATIONJOEVCWPQTMYWTTBY')
TEMPRELATIONNICONCHYGCBMWKPH(Node,Pload,SndTime,SndTime)<= (log(Node,Pload,SndTime)) & (clock(Node,THISISAWILDCARDAJRFVWTAABOQFSEZ,SndTime,THISISAWILDCARDJILZTHCQPETKQORO))
TEMPRELATIONJOEVCWPQTMYWTTBY(Node,Pload,OPLOC,SndTime)<=TEMPRELATIONNICONCHYGCBMWKPH(Node,Pload,SndTime,SndTime)&(OPLOC==(lambda SndTime: SndTime+1))
log_provLEQLBWCDHSKWIYVA=TEMPRELATIONJOEVCWPQTMYWTTBY
print ( pre(X,Pl,SndTime) )
print ( post(X,Pl,SndTime) )
